spring.application.name=mobile-app-ws
server.port=9080

management.endpoints.web.exposure.include=*
spring.h2.console.enabled=true
spring.jpa.generate-ddl=true
spring.datasource.platform=h2
spring.datasource.initialization-mode=NEVER

# It drops the entire schema and recreates it on startup - create.
# If we do not have any change in model class then it only updated the values - update.
spring.jpa.hibernate.ddl-auto=create

# This line actually printing the sql queries on console.
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.url=jdbc:h2:mem:testdb

# This is database credentials
spring.datasource.username=sa
spring.datasource.password=


################# SOME IMPORTANT NOTES OF HIBERNATE ##############

# We can not use entity class name as "User" bcz hibernate restricts it as User name is used in core hibernate.
# @Column annotation is basically used to create custom column name.
# @Table only changes the name of table not the name of entity.
# @Basic is used for custom field.
# Static field of database model class is not going to create column in database.(or use can use @Transient annotation for d ignore.)
# @Temporal(eg. TemporalType.DATE) annotation is used to format date before saving into the database.
# @Lob is used for large objects, basically we use it for descriptions.
# @Clob - it is large character stream.
# @Blob - is is large byte stream, basically we use it for image.
# Types of primary key - Natural key & surrogate key.
# Natural key - it directly used in business case. eg we can take email as this key.
# Surrogate key(@GeneratedValue(strategy=GeneartionType.AUTO)) - means we use this type of key in indirect business case. eg userKey which of alpha numeric key for identification.
#                                       -GeneartionType.IDENTITY - create identity column this option is limited to few databases.
#                                       -GeneartionType.SEQUENCE - it creates unique key by using seq obj for some sequence unique key.
#                                       -GeneartionType.TABLE - creates separate table  to generate primary key.
# two types of obj in hibernate - entity & value.
# @Embeddable - This is basically a value object not an entity, which is going to embed inside any other entity class.
# @Embedded - it is optional, embeds basically the given value obj.
# @EmbeddedId - if you want to embed obj with primary key.
# @ElementCollection -  it is used to store collection data to database. it creates sub tables with collection of records.
# @JoinTable - we use this to change the name of auto generated collection table name.

# @ElementCollection
# @JoinTable(name = "USER_ADDRESS", joinColumns=@JoinColumn(name = "USER_ID"))
# @GenericGenerator(name = "increment-gen", strategy = "increment")
# @CollectionId(columns = {@Column(name = "ADDRESS_ID")}, generator = "increment-gen", type = @Type(type = "long"))

#